{
    "translation-unit(0,0)": {
        "pp-directive(0,0)": {
            "[pp_include](0,0)": "#include"
        },
        "pp-directive(0,8)": {
            "[pp_token](0,8)": " <stdio.h>",
            "[NEWLINE](1,0)": "\r\n",
            "[NEWLINE](2,0)": "\r\n"
        },
        "function-definition(2,0)": {
            "[int](2,0)": "int",
            "[WHITESPACE](2,3)": " ",
            "[identifier](2,4)": "main",
            "[left_paren](2,8)": "(",
            "[void](2,9)": "void",
            "[right_paren](2,13)": ")",
            "[WHITESPACE](2,14)": " ",
            "compound-statement(2,15)": {
                "[left_brace](2,15)": "{",
                "[NEWLINE](3,0)": "\r\n",
                "[WHITESPACE](3,0)": "\t",
                "declaration(3,1)": {
                    "[int](3,1)": "int",
                    "[WHITESPACE](3,4)": " ",
                    "[identifier](3,5)": "hoge",
                    "[WHITESPACE](3,9)": " ",
                    "[simple_assign_op](3,10)": "=",
                    "[WHITESPACE](3,11)": " ",
                    "postfix-expression(3,12)": {
                        "primary-expression(3,12)": {
                            "[decimal_constant](3,12)": "11"
                        }
                    },
                    "[semicolon](3,14)": ";",
                    "[NEWLINE](4,0)": "\r\n",
                    "[WHITESPACE](4,0)": "\t"
                },
                "statement(4,1)": {
                    "[identifier](4,1)": "printf",
                    "statement(4,7)": {
                        "expression(4,7)": {
                            "postfix-expression(4,7)": {
                                "primary-expression(4,7)": {
                                    "[left_paren](4,7)": "(",
                                    "expression(4,8)": {
                                        "postfix-expression(4,8)": {
                                            "primary-expression(4,8)": {
                                                "[string_literal](4,8)": "\"Hi!!\""
                                            }
                                        }
                                    },
                                    "[right_paren](4,14)": ")"
                                }
                            }
                        },
                        "[semicolon](4,15)": ";",
                        "[NEWLINE](5,0)": "\r\n",
                        "[WHITESPACE](5,0)": "\t"
                    }
                },
                "statement(5,1)": {
                    "[return](5,1)": "return",
                    "[WHITESPACE](5,7)": " ",
                    "expression(5,8)": {
                        "postfix-expression(5,8)": {
                            "primary-expression(5,8)": {
                                "[octal_constant](5,8)": "0"
                            }
                        }
                    },
                    "[semicolon](5,9)": ";",
                    "[NEWLINE](6,0)": "\r\n"
                },
                "[right_brace](6,0)": "}",
                "[NEWLINE](7,0)": "\r\n"
            }
        },
        "EOF(7,0)": ""
    }
}